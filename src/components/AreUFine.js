import React, { Component } from "react";import { View, Text, Image, TouchableOpacity, Animated, I18nManager, Dimensions, FlatList, Slider} from "react-native";import {Container, Content, Header, Left, Right, Body, Button, Icon, Item, Label, Input} from 'native-base'import lightStyles from '../../assets/styles/light'import darkStyles from '../../assets/styles/dark'import COLORS from '../consts/colors'import i18n from '../../locale/i18n'import {NavigationEvents} from "react-navigation";import themeImages from '../consts/Images'import {connect} from "react-redux";import axios from "axios";import CONST from "../consts";const height = Dimensions.get('window').height;const width = Dimensions.get('window').width;class AreUFine extends Component {	constructor(props){		super(props);		this.state = {			type: 1,			status: null		}	}	static navigationOptions = () => ({		drawerLabel: () => null	});	setRUOK(type){		const user_id = this.props.user.id;		if (type){			axios.post(CONST.url + 'stop_ready', { user_id, lang: this.props.lang }).then(response => {				this.setState({ status: 200 });			});			return this.props.navigation.navigate('home');		}		return this.props.navigation.navigate('home');	}	render() {		let styles  = lightStyles;		let images  = themeImages.lightImages;		let colors  = COLORS;		if (this.props.theme == 'dark') {			styles = darkStyles;			images = themeImages.darkImages;			colors = colors.darkColors		}else {			styles = lightStyles;			images = themeImages.lightImages;			colors = colors.lightColors		}		return (			<Container style={{ backgroundColor: colors.darkBackground }}>				<Header style={[styles.header , styles.plateformMarginTop]} noShadow>					<View style={[styles.headerView  , styles.animatedHeader ,{ backgroundColor: colors.darkBackground }]}>						<Right style={styles.flex0}>							<TouchableOpacity onPress={() => this.props.navigation.openDrawer()} style={{ flexDirection: 'row', marginTop: 20 }}>								<Image source={images.drawer} style={{ width: 25, height: 25, marginTop: 35, marginHorizontal: 8 }} resizeMode={'contain'} />								<Image source={images.logo_tittle} style={{ width: 90, height: 90 }} resizeMode={'contain'} />							</TouchableOpacity>						</Right>						<Body style={[styles.headerText , styles.headerTitle]}></Body>						<Left style={styles.flex0}>							{/*<TouchableOpacity onPress={() => this.props.navigation.navigate('notFine')} style={{ marginTop: 20 }}>*/}								{/*<Image source={images.back} style={{ width: 25, height: 25, margin: 5, marginTop: 15, transform: I18nManager.isRTL ? [{rotateY : '0deg'}] : [{rotateY : '-180deg'}] }} resizeMode={'contain'} />*/}							{/*</TouchableOpacity>*/}						</Left>					</View>				</Header>				<Content style={{ backgroundColor: colors.darkBackground, marginTop: -25 }} contentContainerStyle={{ flexGrow: 1 }}>					<View>						<View style={{ marginTop: 10, backgroundColor: colors.lightBackground, borderTopColor: colors.pageBorder, borderTopWidth: 1}}>							<View style={{width: 0, height: 0, backgroundColor: 'transparent', borderStyle: 'solid', borderLeftWidth: 50, borderTopWidth: 50, borderLeftColor: 'transparent', borderTopColor: colors.darkBackground, right: 0, position: 'absolute', top: -1 }} />							<View style={{ flex: 1, height: 10, width: '100%' }}/>							<View style={{ width: 1, height: 70, backgroundColor: colors.pageBorder, transform: I18nManager.isRTL ? [{ rotate: '45deg'}] : [{ rotate: '-45deg'}], left: -26, top: -21, alignSelf: 'flex-end' }} />							<View style={{ marginTop: -40, height: height-109 }}>								<View style={{ marginTop: 30, alignItems: 'center', flex: 1, alignSelf: 'center' }}>									<Text style={{ fontFamily: I18nManager.isRTL ? 'tajawalBold' : 'openSansBold', color: colors.labelFont, marginTop: 10, fontSize: 18 }}>{ i18n.t('areUFine') }</Text>									<Image source={images.you_ok} resizeMode={'contain'} style={{ width: 230, height: 230 }} />									<Button onPress={() => this.setRUOK(1)} style={{ backgroundColor: colors.orange, width: 150, height: 35, marginTop: 40, alignItems: 'center', justifyContent: 'center' }} >										<Text style={{ fontFamily: I18nManager.isRTL ? 'tajawal' : 'openSans', color: '#472d35', textAlign: 'center'}}>{ i18n.t('imFine') }</Text>									</Button>									<Button onPress={() => this.setRUOK(0)} style={{ backgroundColor: colors.orange, width: 150, height: 35, marginTop: 10, alignItems: 'center', justifyContent: 'center' }} >										<Text style={{ fontFamily: I18nManager.isRTL ? 'tajawal' : 'openSans', color: '#472d35', textAlign: 'center'}}>{ i18n.t('imNotFine') }</Text>									</Button>								</View>							</View>						</View>					</View>				</Content>			</Container>		);	}}const mapStateToProps = ({ lang, theme, profile }) => {	return {		lang	: lang.lang,		theme	: theme.theme,		user	: profile.user,	};};export default connect(mapStateToProps, {  })(AreUFine);
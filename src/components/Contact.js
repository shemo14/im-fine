import React, { Component } from "react";import { View, Text, Image, TouchableOpacity, Platform, I18nManager, Dimensions, FlatList, Slider} from "react-native";import { Container, Content, Header, Left, Right, Body, Icon, Item, Label, Input, Switch, Picker, Radio } from 'native-base'import lightStyles from '../../assets/styles/light'import darkStyles from '../../assets/styles/dark'import COLORS from '../consts/colors'import i18n from '../../locale/i18n'import {connect} from "react-redux";class Contact extends Component {	constructor(props){		super(props);		this.state = {			checked: this.props.data.is_emergency		}	}	checkRadio(isChecked, selectedId){		this.setState({ checked: !this.state.checked })		if(isChecked){			this.props.pushSelectedChecks(selectedId);		}else{			this.props.pullSelectedChecks(selectedId);		}	}	render() {		let colors  = COLORS;		if (this.props.theme == 'dark') {			colors = colors.darkColors		}else {			colors = colors.lightColors		}		return (			<View>				<TouchableOpacity onPress={ () => this.checkRadio(!this.state.checked ,this.props.data.id)} style={{ flexDirection: 'row', justifyContent:'space-between' , alignItems:'center' ,  borderBottomColor: '#ad9bc1', borderBottomWidth: 1 , paddingVertical:15}}>					<View style={{ flexDirection: 'row', justifyContent:'center' , alignItems:'center'}}>						<View style={{ height: 60, width: 60, borderRadius: 50, borderWidth: 2, overflow: 'hidden', borderColor: '#9f8f75', justifyContent: 'center', alignItems: 'center' }}>							<Image source={{ uri: this.props.data.image }} resizeMode={'contain'} style={{ width: 80, height: 80 }} />						</View>						<Text style={{ color: colors.labelFont, fontFamily: I18nManager.isRTL ? 'tajawalBold' : 'openSansBold', fontSize: 15 , marginLeft:10 }}>{ this.props.data.name }</Text>					</View>					<Radio onPress={ () => this.checkRadio(!this.state.checked ,this.props.data.id)} selected={this.state.checked}  color={colors.labelFont} selectedColor={colors.orange} style={{borderColor:colors.orange ,						paddingRight:Platform.OS === 'ios' ?3:2,						left:0,}} />				</TouchableOpacity>			</View>		);	}}const mapStateToProps = ({ lang, profile, theme }) => {	return {		lang: lang.lang,		user: profile.user,		theme: theme.theme	};};export default connect(mapStateToProps, {})(Contact);